${manager.allClassCopyright}package ${request.buildHierarchyPackage($table)};

import org.lastaflute.core.template.TemplatePmb;

/**
 * The Parameter-comMent style template (called PM template) on LastaFlute.
 * @author FreeGen
 */
public class ${table.className} implements TemplatePmb {

    public static final String PATH = "${table.domainPath}";

#foreach ($property in $table.propertyList)
    protected ${property.propertyType} ${property.uncapCalemName};
#end

    @Override
    public String getTemplatePath() {
        return PATH;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("${table.className}:{");
#set ($propIndex = 0)
#foreach ($property in $table.propertyList)
#if ($propIndex == 0)
        sb.append(${property.uncapCalemName});
#else
        sb.append(", ").append(${property.uncapCalemName});
#end
#set ($propIndex = $propIndex + 1)
#end
        sb.append("}");
        return sb.toString();
    }
#foreach ($property in $table.propertyList)

    /**
     * Get the value of ${property.uncapCalemName}, called by parameter comment.
     * @return The parameter value of ${property.uncapCalemName}. (NullAllowed: if empty string, returns null, NotEmpty)
     */
    public ${property.propertyType} get${property.capCalemName}() {
#if ($property.propertyType == "String")
        return ${property.uncapCalemName} != null && !${property.uncapCalemName}.isEmpty() ? ${property.uncapCalemName} : null;
#else
        return ${property.uncapCalemName};
#end
    }

    /**
     * Set the value of ${property.uncapCalemName}, used in parameter comment. <br>
     * If the set value is empty string, treated as null. (getter returns null)
     * @param ${property.uncapCalemName} The parameter value for parameter comment. (NullAllowed, EmptyAllowed: if empty string, treated as null)
     */
    public void set${property.capCalemName}(${property.propertyType} ${property.uncapCalemName}) {
        this.${property.uncapCalemName} = ${property.uncapCalemName};
    }
#end
}
